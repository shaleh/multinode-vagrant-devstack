- name: Check mappings for IdP to SP
  uri:
    url: "https://{{ node_hostname }}:5000/v3/OS-FEDERATION/mappings/{{ item.cloud }}"
    method: GET
    HEADER_X-Auth-Token: "password"
    status_code: [200, 404]
    validate_certs: no
  with_items: "{{ openstack_nodes|byattr('role', 'keystone-idp') }}"
  register: mappings_for_idps

- name: Put mapping for IdP to SP
  uri:
    url: "https://{{ node_hostname }}:5000/v3/OS-FEDERATION/mappings/{{ item.item.cloud }}"
    method: PUT
    body: "{{ lookup('template', 'mapping.json.j2') }}"
    body_format: json
    HEADER_X-Auth-Token: "password"
    HEADER_Content-Type: "application/json"
    status_code: 201
    validate_certs: no
  when: "item.status == 404"
  with_items: mappings_for_idps.results

- name: check for registered IdP
  uri:
     url: "https://{{ node_hostname }}:5000/v3/OS-FEDERATION/identity_providers/{{ item.cloud }}"
     method: GET
     HEADER_X-Auth-Token: "password"
     status_code: [200, 404]
     validate_certs: no
  with_items: "{{ openstack_nodes|byattr('role', 'keystone-idp') }}"
  register: registered_idps

- name: register IdP with SP
  uri:
     url: "https://{{ node_hostname }}:5000/v3/OS-FEDERATION/identity_providers/{{ item.item.cloud }}"
     method: PUT
     body: "{{ lookup('template', 'register-idp.json.j2') }}"
     body_format: json
     HEADER_X-Auth-Token: "password"
     HEADER_Content-Type: "application/json"
     status_code: 201
     validate_certs: no
  when: "item.status == 404"
  with_items: registered_idps.results

- name: Check for IdP SAML registration
  uri:
     url: "https://{{ node_hostname }}:5000/v3/OS-FEDERATION/identity_providers/{{ item.cloud }}/protocols/saml2"
     method: GET
     HEADER_X-Auth-Token: "password"
     status_code: [200, 404]
     validate_certs: no
  with_items: "{{ openstack_nodes|byattr('role', 'keystone-idp') }}"
  register: registered_saml_idps

- name: register a SAML Protocol for the IDP in SP
  uri:
    url: "https://{{ node_hostname }}:5000/v3/OS-FEDERATION/identity_providers/{{ item.item.cloud }}/protocols/saml2"
    method: PUT
    body: "{{ lookup('template', 'register-idp-saml.json.j2') }}"
    body_format: json
    HEADER_X-Auth-Token: "password"
    HEADER_Content-Type: "application/json"
    status_code: 201
    validate_certs: no
  when: "item.status == 404"
  with_items: registered_saml_idps.results
